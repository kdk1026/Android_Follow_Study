02. Android File (외부 저장소)
------------------------------
    - minSdkVersion 26 / targetSdkVersion 30

     * src/main/res/layout/activity_main.xml
    -----------------------------------------------------------------
    <Button
        android:id="@+id/btnFileTest"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="25dp"
        android:layout_marginTop="25dp"
        android:text="파일 테스트"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />
    -----------------------------------------------------------------

    * src/main/java/com/example/testapp/util/FileUtil.java
    -----------------------------------------------------------------
    저장공간/유틸/FileUtil.java
    -----------------------------------------------------------------

    * src/main/java/com/example/testapp/MainActivity.java
    -----------------------------------------------------------------
    public static class Constants {
        public static String dirNm = "kdk";
        public static String fileNm = "Hello, World";
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        FileUtil.getInstance().checkPermission(getApplicationContext(), this);

        Button btnFileTest = findViewById(R.id.btnFileTest);
        btnFileTest.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                File dir = FileUtil.getInstance().getExternalFile(Constants.dirNm, true, null);
                boolean isMaked = FileUtil.getInstance().makeDir(dir);
                Log.d(TAG, "makeDir : " + Boolean.toString(isMaked));

                if ( isMaked ) {
                    String sFilePath1 = Constants.dirNm + File.separator + Constants.fileNm;
                    File file1 = FileUtil.getInstance().getExternalFile(sFilePath1, true, null);
                    FileUtil.getInstance().writeFile(file1, "살어리 살어리랏다");
                    Log.d(TAG, "writeFile : " + file1.exists());

                    // 테스르를 위해 해당 경로에 텍스트 파일 생성해둠
                    File file2 = FileUtil.getInstance().getExternalFile("abc.txt", false, Environment.DIRECTORY_DOWNLOADS);
                    String sTxt = FileUtil.getInstance().readFile(file2);
                    Log.d(TAG, "readFile : " + sTxt);

                    FileUtil.getInstance().removeFile(sFilePath1, true, null);
                    Log.d(TAG, "removeFile file : " + file1.exists());

                    FileUtil.getInstance().removeFile(Constants.dirNm, true, null);
                    Log.d(TAG, "removeFile dir : " + dir.exists());
                }
            }
        });
    }

    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull @NotNull String[] permissions, @NonNull @NotNull int[] grantResults) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);

        if ( Build.VERSION.SDK_INT < Build.VERSION_CODES.R ) {
            // below Android 11
            switch (requestCode) {
                case FileUtil.PERMISSIONS_REQUEST:
                    if ( grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                        Toast.makeText(getApplicationContext(), "앱 실행을 위한 권한이 설정 되었습니다.", Toast.LENGTH_LONG).show();
                    } else {
                        Toast.makeText(getApplicationContext(), "앱 실행을 위한 권한이 취소 되었습니다.", Toast.LENGTH_LONG).show();
                    }
                    break;
            }
        }
    }
    -----------------------------------------------------------------
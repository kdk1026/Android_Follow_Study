03. Android Webview 세팅
-------------------------------------
				
 	* /java/패키지 경로/Main2Activity
	-----------------------------------------------------------------
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main2);

        WebView webView1 = findViewById(R.id.webView1);

        WebSettings webSettings = webView1.getSettings();
		
		// 폼 입력 값 저장 여부
		webSettings.setSaveFormData(true);
		
		// 줌 사용 여부 : HTML Meta태그에 적어놓은 설정이 우선 됨
        webSettings.setSupportZoom(true);
		
		// 줌 사용 여부와 같이 사용해야 하는 설정(안드로이드 내장 기능)
        webSettings.setBuiltInZoomControls(true); 	
		
		// 줌 사용 시 하단에 뜨는 +, - 아이콘 보여주기 여부
        webSettings.setDisplayZoomControls(false);
		
		// 자바스크립트 사용 여부
        webSettings.setJavaScriptEnabled(true);
		
		// 웹뷰내의 localStorage 사용 여부
        webSettings.setDomStorageEnabled(true);
		
		// 웹뷰내의 위치 정보 사용 여부
        webSettings.setGeolocationEnabled(true);
		
		// 웹뷰내의 JS의 window.open()을 허용할 것인지에 대한 여부
		webSettings.setAllowFileAccessFromFileURLs(true);

		// 웹뷰내의 Ajax 허용 여부
        webSettings.setAllowUniversalAccessFromFileURLs(true);
		
		// HTTPS HTTP의 연동, 서로 호출 가능하도록
		webSettings.setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW);

		// window.open() 제대로 동작
		webSettings.setJavaScriptCanOpenWindowsAutomatically(true);

		// 앱에 등록되어 있는 이미지 리소스를 자동으로 로드하도록 설정
		webSettings.setLoadsImagesAutomatically(true);

		// wide viewport를 사용하도록 설정 (html 컨텐츠가 웹뷰에 맞게 나타나도록 함)
		webSettings.setUseWideViewPort(false);

		/*
			캐시 모드를 설정하는 속성
				- LOAD_CACHE_ELSE_NETWORK 기간이 만료돼 캐시를 사용할 수 없을 경우 네트워크를 사용합니다.
				- LOAD_CACHE_ONLY 네트워크를 사용하지 않고 캐시를 불러옵니다.
				- LOAD_DEFAULT 기본적인 모드로 캐시를 사용하고 만료된 경우 네트워크를 사용해 로드합니다.
				- LOAD_NORMAL 기본적인 모드로 캐시를 사용합니다.
				- LOAD_NO_CACHE 캐시모드를 사용하지 않고 네트워크를 통해서만 호출합니다.

				※ 어지간하면 캐시는 No-Cache 추천
		*/
		webSettings.setCacheMode(WebSettings.LOAD_NO_CACHE);

		// 앱 내부 캐시 사용 여부 설정
		webSettings.setAppCacheEnabled(false);

		// 웹뷰 내에서 파일 액세스 활성화 여부
		webSettings.setAllowFileAccess(true);

		/*
			UserAgent에 특정 문자열 추가
				- 일반적으로 모바일 웹, WebView 의 UserAgent는 동일
				- 문자열 추가로 애플리케이션 접속 판별 구분
		*/
		webSettings.setUserAgentString("InApp");
		
		// alert 이나 confirm 창 띄우기
		webView1.setWebChromeClient(new WebChromeClient());
    }
	-----------------------------------------------------------------
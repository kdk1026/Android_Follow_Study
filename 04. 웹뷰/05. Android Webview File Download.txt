05. Android Webview File Download
----------------------------------
    - minSdkVersion 26 / targetSdkVersion 30

    - 권한 없이 접근 가능한 Environment.DIRECTORY_DOWNLOADS 에 저장
        > 예전 버전은 이것도 권한이 필요하긴 했었나 보다...
        > 권한 설정은 다음 참고
            저장 공간/유틸/FileUtil.java 참고

 	* /java/패키지 경로/MainActivity
	-----------------------------------------------------------------
    private static final String TAG = "***MainActivity";

    private WebView webView;
    private WebSettings webSettings;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        webView = findViewById(R.id.webView);
        webSettings = webView.getSettings();

        webSettings.setJavaScriptEnabled(true);

        webView.setWebViewClient(new WebViewClient());
        webView.setWebChromeClient(new WebChromeClient());

        webView.setDownloadListener(new MyDownloadListenerImpl());

        webView.loadUrl("https://test-a9f7e.web.app/download.html");
    }

    private class MyDownloadListenerImpl implements DownloadListener {

        @Override
        public void onDownloadStart(String url, String userAgent, String contentDisposition, String mimetype, long contentLength) {
            Log.d(TAG, "onDownloadStart()- url : " + url);
            Log.d(TAG, "onDownloadStart()- userAgent : " + userAgent);
            Log.d(TAG, "onDownloadStart()- contentDisposition : " + contentDisposition);
            Log.d(TAG, "onDownloadStart()- mimetype : " + mimetype);

            DownloadManager.Request request = new DownloadManager.Request(Uri.parse(url));
            try {
                contentDisposition = URLDecoder.decode(contentDisposition, StandardCharsets.UTF_8.toString());
            } catch (UnsupportedEncodingException e) {
                e.printStackTrace();
            }
            contentDisposition = contentDisposition.substring(0, contentDisposition.lastIndexOf(";"));
            request.setMimeType(mimetype);

            String sCookies = CookieManager.getInstance().getCookie(url);
            request.addRequestHeader("cookie", sCookies);

            String sFileName = URLUtil.guessFileName(url, contentDisposition, mimetype);

            request.addRequestHeader("User-Agent", userAgent);
            request.setDescription("Downloading file...");
            request.setTitle(sFileName);
            request.allowScanningByMediaScanner();
            request.setNotificationVisibility(DownloadManager.Request.VISIBILITY_VISIBLE_NOTIFY_COMPLETED);
            request.setDestinationInExternalPublicDir(Environment.DIRECTORY_DOWNLOADS, sFileName);

            DownloadManager downloadManager = (DownloadManager) getSystemService(DOWNLOAD_SERVICE);
            downloadManager.enqueue(request);

            Toast.makeText(getApplicationContext(), "파일을 다운로드합니다.", Toast.LENGTH_LONG).show();
        }
    }
    -----------------------------------------------------------------

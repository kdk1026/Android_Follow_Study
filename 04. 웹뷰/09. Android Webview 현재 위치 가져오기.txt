09. Android Webview 현재 위치 가져오기
--------------------------------------
    - Geolocation 사용하기

    - minSdkVersion 26 / targetSdkVersion 30

<< HTML >>
    * 현재 위치로 카카오맵 띄우기
        - SSL이 되어야 하므로 Firebase Hosting 이용
        - common.js는 GitHub 참고
            > https://github.com/kdk1026/JsUtilsKdk/blob/master/JsUtilsKdk/common.js
    -----------------------------------------------------------------
    <!DOCTYPE html>
    <html lang="ko">
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Document</title>

        <script src="js/common.js"></script>
    </head>
    <body>
        
        <div id="map" style="width:100%;height:350px;"></div>

        <script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=7728684bb39c92f2802312971f9165fd&libraries=services"></script>
        <script>
            //CommonJS.Map.searchKakaoMap( document.querySelector('#map'), '경기도 성남시 삼평동 대왕판교로645번길 16' );

            window.onload = function() {
                CommonJS.getLocation(fnLocationSuc, fnLocationErr);
            }
            
            function fnLocationSuc(position) {
                //console.log(position.coords);
                //console.log(position.coords.latitude);  // 위도
                //console.log(position.coords.longitude); // 경도

                fnSetCenter( document.querySelector('#map'), 
                    position.coords.latitude, position.coords.longitude );
            }
            
            function fnLocationErr(error) {
                console.log(error);
            }
            
            function fnSetCenter(mapElement, latitude, longitude) {
                var container = mapElement;
                var options = {
                    center: new kakao.maps.LatLng(33.450701, 126.570667),
                    level: 3
                };

                // 지도를 생성합니다  
                var map = new kakao.maps.Map(container, options);

                // 이동할 위도 경도 위치를 생성합니다 
                var moveLatLon = new kakao.maps.LatLng(latitude, longitude);
        
                // 지도 중심을 이동 시킵니다
                map.setCenter(moveLatLon);
            }
        </script>

    </body>
    </html>
    -----------------------------------------------------------------

<< Android >>
	* mainfests/AndroidManifest.xml
	-----------------------------------------------------------------
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
	-----------------------------------------------------------------

     * src/main/res/layout/activity_main.xml
    -----------------------------------------------------------------
    <WebView
        android:id="@+id/webView"
        android:layout_width="0dp"
        android:layout_height="0dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />
    -----------------------------------------------------------------

    * src/main/java/com/example/testapp/MainActivity.java
    -----------------------------------------------------------------
    private WebView webView;
    private WebSettings webSettings;

    public static final int PERMISSIONS_REQUEST = 3;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        webView = findViewById(R.id.webView);
        webSettings = webView.getSettings();

        this.checkPermission( getApplicationContext() );

        // 자바스크립트 사용 여부 (Default : false)
        webSettings.setJavaScriptEnabled(true);

        // 웹뷰내의 위치 정보 사용 여부 (Default : true)
        //webSettings.setGeolocationEnabled(true);

        webView.setWebChromeClient(new WebChromeClient() {
            @Override
            public void onGeolocationPermissionsShowPrompt(String origin, GeolocationPermissions.Callback callback) {
                super.onGeolocationPermissionsShowPrompt(origin, callback);
                callback.invoke(origin, true, false);
            }
        });

        webView.loadUrl("https://test-a9f7e.web.app/map_kakao.html");
    }

    private void checkPermission(Context context) {
        if (ActivityCompat.checkSelfPermission(context,
                Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {

            if ( !ActivityCompat.shouldShowRequestPermissionRationale(this,
                    Manifest.permission.ACCESS_FINE_LOCATION) ) {
                ActivityCompat.requestPermissions(this,
                        new String[] {Manifest.permission.ACCESS_FINE_LOCATION}, PERMISSIONS_REQUEST);
            }
        }
    }

    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull @NotNull String[] permissions, @NonNull @NotNull int[] grantResults) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);

        switch (requestCode) {
            case PERMISSIONS_REQUEST: {
                if ( grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                    Toast.makeText(getApplicationContext(), "앱 실행을 위한 권한이 설정 되었습니다. 앱을 재실행합니다.", Toast.LENGTH_LONG).show();

                    try {
                        Thread.sleep(3000);

                        /*
                            재실행 안하면 다음과 같은 에러 발생 (Logcat Error)
                                - The application does not have sufficient geolocation permissions
                         */
                        this.restart( getApplicationContext() );

                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }

                } else {
                    Toast.makeText(getApplicationContext(), "앱 실행을 위한 권한이 취소 되었습니다.", Toast.LENGTH_LONG).show();
                }
                break;
            }
        }
    }

    private void restart(Context context) {
        PackageManager packageManager = context.getPackageManager();
        Intent intent = packageManager.getLaunchIntentForPackage(context.getPackageName());
        ComponentName componentName = intent.getComponent();
        Intent mainIntent = Intent.makeRestartActivityTask(componentName);
        context.startActivity(mainIntent);
        Runtime.getRuntime().exit(0);
    }
    -----------------------------------------------------------------
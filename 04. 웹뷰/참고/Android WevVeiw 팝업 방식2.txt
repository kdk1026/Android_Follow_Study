Android WevVeiw 팝업 방식2
-----------------------------
    - https://wonpaper.tistory.com/412

    - minSdkVersion 26 / targetSdkVersion 30

    * /res/layout/activity_main.xml
	-----------------------------------------------------------------
    <WebView
        android:id="@+id/webView"
        android:layout_width="0dp"
        android:layout_height="0dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />
    -----------------------------------------------------------------

    * /java/패키지 경로/MainActivity
	-----------------------------------------------------------------
    private WebView webView;
    private WebSettings webSettings;

    private WebView webViewPop;
    private Dialog dialog;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        webView = findViewById(R.id.webView);
        webSettings = webView.getSettings();

        webSettings.setJavaScriptEnabled(true);
        webSettings.setJavaScriptCanOpenWindowsAutomatically(true);
        webSettings.setSupportMultipleWindows(true);

        webView.setWebChromeClient(new WebChromeClient() {
            @Override
            public boolean onCreateWindow(WebView view, boolean isDialog, boolean isUserGesture, Message resultMsg) {
                webViewPop = new WebView(MainActivity.this);
                webViewPop.getSettings().setJavaScriptEnabled(true);

                webViewPop.getSettings().setJavaScriptCanOpenWindowsAutomatically(true);
                webViewPop.getSettings().setSupportMultipleWindows(true);
                webViewPop.getSettings().setDomStorageEnabled(true);

                dialog = new Dialog(MainActivity.this);
                dialog.setContentView(webViewPop);

                ViewGroup.LayoutParams params = dialog.getWindow().getAttributes();
                params.width = ViewGroup.LayoutParams.MATCH_PARENT;
                params.height = ViewGroup.LayoutParams.MATCH_PARENT;

                dialog.getWindow().setAttributes((android.view.WindowManager.LayoutParams) params);
                dialog.show();

                dialog.setOnKeyListener(new DialogInterface.OnKeyListener() {
                    @Override
                    public boolean onKey(DialogInterface dialog, int keyCode, KeyEvent event) {
                        if ( keyCode == KeyEvent.KEYCODE_BACK ) {
                            dialog.dismiss();
                            webViewPop.loadUrl("javascript:self.close();");
                            return true;
                        } else {
                            return false;
                        }
                    }
                });

                webViewPop.setWebChromeClient(new WebChromeClient() {
                    @Override
                    public void onCloseWindow(WebView window) {
                        dialog.dismiss();
                    }
                });

                webViewPop.setWebViewClient(new WebViewClient(){
                    @Override
                    public boolean shouldOverrideUrlLoading(WebView view, WebResourceRequest request) {
                        return false;
                    }
                });

                WebView.WebViewTransport transport = (WebView.WebViewTransport) resultMsg.obj;
                transport.setWebView(webViewPop);
                resultMsg.sendToTarget();

                return true;
            }
        });

        webView.loadUrl("http://in4in.com/kdk/a.html");

        /*
            ERR_CLEARTEXT_NOT_PERMITTED 오류

                - AndroidManifest.xml
                    android:usesCleartextTraffic="true"
        */
    }
    -----------------------------------------------------------------
Android Wifi SSID 가져오기
--------------------------
    - minSdkVersion 26 / targetSdkVersion 30

* src/main/AndroidManifest.xml
-----------------------------------------------------------------
<uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
<uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
<uses-permission android:name="android.permission.CHANGE_WIFI_STATE"/>
-----------------------------------------------------------------

* com/example/mytest/MainActivity.java
-----------------------------------------------------------------
private static final String TAG = "***MainActivity";

private TextView textView;

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    textView = findViewById(R.id.textView);

    this.checkPermission(super.getApplicationContext());

    WifiManager wifiManager = (WifiManager) super.getApplicationContext().getSystemService(Context.WIFI_SERVICE);

    if (wifiManager.isWifiEnabled()) {
        WifiInfo wifiInfo = wifiManager.getConnectionInfo();
        String ssid = wifiInfo.getSSID();

        textView.setText(ssid);

        Log.d(TAG, wifiInfo.toString());
    } else {
        textView.setText("와이파이 연결 안됨");
    }
}

public void checkPermission(Context context) {
    if (ContextCompat.checkSelfPermission(context, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
        Log.d(TAG, "checkSelfPermission");

        if (ActivityCompat.shouldShowRequestPermissionRationale(MainActivity.this, Manifest.permission.ACCESS_COARSE_LOCATION)) {

            Log.d(TAG, "shouldShowRequestPermissionRationale");
        } else {
            Log.d(TAG, "권한 요청");
            ActivityCompat.requestPermissions(MainActivity.this,
                    new String[]{Manifest.permission.ACCESS_COARSE_LOCATION,
                            Manifest.permission.ACCESS_FINE_LOCATION,
                            Manifest.permission.ACCESS_WIFI_STATE,
                            Manifest.permission.CHANGE_WIFI_STATE},
                    1000);
        }
    }
}

@Override
public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
    super.onRequestPermissionsResult(requestCode, permissions, grantResults);
    
    switch (requestCode) {
        case 1000: {
            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                Log.d(TAG, "권한 획득 성공");
            } else {
                Log.d(TAG, "권한 획득 실패");
            }
            return;
        }
    }
}
-----------------------------------------------------------------
Android 전화번호 및 고유ID 가져오기
----------------------------------
    - minSdkVersion 26 / targetSdkVersion 30

	* src/main/AndroidManifest.xml
	-----------------------------------------------------------------
    <!--
        https://developer.android.com/about/versions/11/privacy/permissions?hl=ko
    -->
    <!-- Grants the READ_PHONE_STATE permission only on devices that run
         Android 10 (API level 29) and lower. -->
    <uses-permission android:name="android.permission.READ_PHONE_STATE"
        android:maxSdkVersion="29" />
    <uses-permission android:name="android.permission.READ_SMS" />
    <uses-permission android:name="android.permission.READ_PHONE_NUMBERS" />
	-----------------------------------------------------------------
	
	* src/main/java/com/example/testapp/MainActivity.java
	-----------------------------------------------------------------
    private static final String TAG = "***MainActivity";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        /*
            https://develop-writing.tistory.com/40
         */
        this.readPhone();
        this.getAndroidId();
    }

    private void readPhone() {
        TelephonyManager tm = (TelephonyManager) getSystemService(Context.TELEPHONY_SERVICE);

        // tm.getLine1Number() 에 마우스 올리면 Add Permission check 클릭
        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.READ_SMS) != PackageManager.PERMISSION_GRANTED
                && ActivityCompat.checkSelfPermission(this, Manifest.permission.READ_PHONE_NUMBERS) != PackageManager.PERMISSION_GRANTED
                && ActivityCompat.checkSelfPermission(this, Manifest.permission.READ_PHONE_STATE) != PackageManager.PERMISSION_GRANTED) {
            // TODO: Consider calling
            //    ActivityCompat#requestPermissions
            // here to request the missing permissions, and then overriding
            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
            //                                          int[] grantResults)
            // to handle the case where the user grants the permission. See the documentation
            // for ActivityCompat#requestPermissions for more details.
            Log.d(TAG, "권한없음");

            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
                ActivityCompat.requestPermissions(MainActivity.this,
                        new String[]{ Manifest.permission.READ_PHONE_NUMBERS },
                        3);

                Log.d(TAG, "앱을 재실행해 주세요~");
            }

            return;
        }

        Log.d(TAG, "음성통화 상태 : [ getCallState ] >>> " + tm.getCallState());
        Log.d(TAG, "데이터통신 상태 : [ getDataState ] >>> " + tm.getDataState());
        Log.d(TAG, "전화번호 : [ getLine1Number ] >>> " + tm.getLine1Number());
        Log.d(TAG, "통신사 ISO 국가코드 : [ getNetworkCountryIso ] >>> "+tm.getNetworkCountryIso());
        Log.d(TAG, "통신사 ISO 국가코드 : [ getSimCountryIso ] >>> "+tm.getSimCountryIso());
        Log.d(TAG, "망사업자 MCC+MNC : [ getNetworkOperator ] >>> "+tm.getNetworkOperator());
        Log.d(TAG, "망사업자 MCC+MNC : [ getSimOperator ] >>> "+tm.getSimOperator());
        Log.d(TAG, "망사업자명 : [ getNetworkOperatorName ] >>> "+tm.getNetworkOperatorName());
        Log.d(TAG, "망사업자명 : [ getSimOperatorName ] >>> "+tm.getSimOperatorName());
        Log.d(TAG, "SIM 카드 상태 : [ getSimState ] >>> "+tm.getSimState());
    }

    private void getAndroidId() {
        String sAndroidId = Settings.Secure.getString(this.getContentResolver(), Settings.Secure.ANDROID_ID);

        Log.d(TAG, "Android_ID >>> " + sAndroidId);
    }
    -----------------------------------------------------------------